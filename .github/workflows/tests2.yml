name: run-validation-tests
on: pull_request

permissions:
  contents: read

jobs:
  unit-tests2:
    runs-on: [self-hosted, kstest-permian]
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # * Don't forget to copypaste also the same matrix below in rpm tests!
        # * Replace current branch in "release" with empty string. This makes name of the check for
        #   the current branch always have the same name, so that it can be added to required
        #   checks.
        # * For various branches, comment out what does not apply:
        #     on -devel, run everything
        #     on -release, only -release
        #     on master, only master and ELN
        release: ['']
        include:
          - release: ''
            target_branch: 'rhel-9'
            ci_tag: 'rhel-9'
    env:
      CI_TAG: '${{ matrix.ci_tag }}'
      TARGET_BRANCH_NAME: 'origin/${{ matrix.target_branch }}'

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Rebase to current ${{ env.TARGET_BRANCH_NAME }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git log --oneline -1 ${{ env.TARGET_BRANCH_NAME }}
          git rebase ${{ env.TARGET_BRANCH_NAME }}

      # build container if files for dockerfile changed in the PR
      - name: Build anaconda-ci container
        run: make -f Makefile.am anaconda-ci-build

      - name: Run tests in anaconda-ci container
        run: |
          # put the log in the output, where it's easy to read and link to
          make -f Makefile.am container-ci || { cat test-logs/test-suite.log; exit 1; }

      - name: Upload test and coverage logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'logs (${{ matrix.ci_tag }})'
          path: test-logs/*

  rpm-tests2:
    runs-on: [self-hosted, kstest-permian]
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # For matrix details, see comments for the unit tests above.
        release: ['']
        include:
          - release: ''
            target_branch: 'rhel-9'
            ci_tag: 'rhel-9'
    env:
      CI_TAG: '${{ matrix.ci_tag }}'
      TARGET_BRANCH_NAME: 'origin/${{ matrix.target_branch }}'

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Rebase to current ${{ env.TARGET_BRANCH_NAME }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git log --oneline -1 ${{ env.TARGET_BRANCH_NAME }}
          git rebase ${{ env.TARGET_BRANCH_NAME }}

      - name: Build RPM test container
        run: make -f Makefile.am anaconda-rpm-build

      - name: Run RPM tests in container
        run: make -f Makefile.am container-rpm-test

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'logs-rpm-test (${{ matrix.ci_tag }})'
          path: test-logs/*
